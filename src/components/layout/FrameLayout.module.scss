.layout {
  display: flex;

  @keyframes fadeInFadeOut {
    0% {
      opacity: 0;
    }

    50% {
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }

  .frame {
    transition: border var(--animation-speed) ease-in-out;
    border: var(--frame-border-size) solid transparent;
    position: fixed;
    width: 100%;
    height: 100vh;
    z-index: 2000;
    pointer-events: none;
    border-image: linear-gradient(135deg, var(--frame-border-color-dark), var(--frame-border-color-bright)) 1;

    &::before,
    &::after {
      content: '';
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
    }

    &::before {
      border: var(--frame-border-size) solid transparent;
      box-sizing: content-box;
      border-image: linear-gradient(135deg, var(--frame-border-color-bright), var(--frame-border-color-dark)) 1;
      will-change: opacity;
      animation: fadeInFadeOut var(--frame-animation-time) ease-in-out infinite;
      /* Adapt margin to all screen sizes, keep border easing */
      transition:
        border var(--animation-speed) ease-in-out,
        margin var(--animation-speed) ease-in-out;
      margin: calc(-1 * var(--frame-border-size));
    }

    &::after {
      box-sizing: border-box;
      /* Adapt shadow size to the size of the border */
      transition: box-shadow var(--animation-speed) ease-in-out;
      box-shadow: 0 0 var(--frame-border-size) rgb(28 65 102);
    }
  }

  .frameBody {
    background-color: var(--background-color);
    width: 100%;
    min-height: 100vh;

    /* Adapt padding to #frame's border, by screen size */
    transition: padding var(--animation-speed) ease-in-out;
    padding: var(--frame-border-size);

    /* Allow content to fill the frame */
    display: flex;
    flex-direction: column;
  }
}
